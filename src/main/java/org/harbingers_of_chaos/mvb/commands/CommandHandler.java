package org.harbingers_of_chaos.mvb.commands;

import net.dv8tion.jda.api.Permission;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.User;
import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import net.dv8tion.jda.api.interactions.components.buttons.Button;
import net.dv8tion.jda.api.entities.Role;

import static org.harbingers_of_chaos.mvb.Main.*;
import static org.harbingers_of_chaos.mvm.MystiVerseModServer.LOGGER;

public class CommandHandler extends ListenerAdapter {

    @Override
    public void onMessageReceived(MessageReceivedEvent event) {
        if (event.getAuthor().isBot()) {return;}
        String message = event.getMessage().getContentDisplay();
        User messageAuthor = event.getAuthor();

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Ä–æ–ª–∏ –ø–æ –µ—ë ID
        Role codderRole = event.getGuild().getRoleById("1185653602056933436");


        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–æ–ª—å null (–Ω–µ –±—ã–ª–∞ –ª–∏ —Ä–æ–ª—å –Ω–∞–π–¥–µ–Ω–∞)
        if (codderRole != null) {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É —Ä–æ–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–∞–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ADMINISTRATOR)
            boolean hasAdminPermission = codderRole.hasPermission(Permission.ADMINISTRATOR);
            if (!hasAdminPermission) {
                LOGGER.warn("Not enough rights");
                return;}
            // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –∏–ª–∏ –¥—Ä—É–≥—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
            if (messageAuthor != null && messageAuthor.getJDA().getRoles().stream().anyMatch(role -> role.getId().equals("1185653602056933436"))) {
                if (message.equalsIgnoreCase("&stop")) {
                    event.getJDA().shutdown();
                    event.getMessage().reply("–£—Å–ø–µ—à–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞! üéÄ").queue();
                    LOGGER.info("Command stop");

                } else if (message.equalsIgnoreCase("$buttons")) {
                    event.getMessage().reply("jepa").addActionRow(Button.primary("Hello", "Jepa")).queue();
                    event.getMessage().reply("jepa1").addActionRow(Button.primary("suggestButton", "suggestion")).queue();
                    event.getMessage().reply("cityJepa").addActionRow(Button.primary("cityButton", "City")).queue();
                    LOGGER.info("Command buttons");

                } else if (message.equalsIgnoreCase("$help")) {
                    event.getMessage().reply("```$help``` - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º." +
                            "```&stop``` - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞." +
                            "\n```$buttons``` - –∫–Ω–æ–ø–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è." +
                            "\n```$appintreset``` - —Å–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∫–∏ –∑–∞—è–≤–æ–∫.").queue();
                    LOGGER.info("Command help");

                } else if (message.equalsIgnoreCase("$appintreset")) {
                    prefs.putInt("appInt", appInt - appInt + 1);
                    event.getMessage().reply("–°—á–µ—Ç—á–∏–∫ —Å–±—Ä–æ—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! ‚òÉÔ∏è").queue();
                    LOGGER.info("Command appintreset");
                }

            } else {
                LOGGER.warn("Not enough role");
            }
        } else {
            LOGGER.warn("Role not found");
        }
    }
}
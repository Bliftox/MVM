package org.harbingers_of_chaos.mvb.suggestion;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.Message;
import net.dv8tion.jda.api.entities.MessageReaction;
import net.dv8tion.jda.api.entities.User;
import net.dv8tion.jda.api.entities.channel.concrete.TextChannel;
import net.dv8tion.jda.api.entities.emoji.Emoji;
import net.dv8tion.jda.api.entities.sticker.StickerSnowflake;
import net.dv8tion.jda.api.events.interaction.ModalInteractionEvent;
import net.dv8tion.jda.api.events.interaction.component.ButtonInteractionEvent;
import net.dv8tion.jda.api.events.message.react.MessageReactionAddEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import net.dv8tion.jda.api.interactions.components.ActionRow;
import net.dv8tion.jda.api.interactions.components.text.TextInput;
import net.dv8tion.jda.api.interactions.components.text.TextInputStyle;
import net.dv8tion.jda.api.interactions.modals.Modal;
import org.harbingers_of_chaos.mvb.Discord;

import java.awt.*;
import java.util.Collection;
import java.util.TreeSet;

import static org.harbingers_of_chaos.mvb.Discord.*;
import static org.harbingers_of_chaos.mvb.application.ApplicationHandler.date;
import static org.harbingers_of_chaos.mvb.application.ApplicationHandler.format;
import static org.harbingers_of_chaos.mvm.MystiVerseModServer.LOGGER;

public class SuggestHandler extends ListenerAdapter {

    @Override
    public void onButtonInteraction(ButtonInteractionEvent event) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ –Ω–∞–∂–∞—Ç –∫–Ω–æ–ø–∫–∞ "suggestButton"
        if (event.getComponentId().equals("suggestButton")) {
            // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
            TextInput suggestTitle = TextInput.create("suggestTitle", "[üìå] –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", TextInputStyle.SHORT)
                    .setPlaceholder("–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
                    .setMinLength(1)
                    .setMaxLength(50)
                    .setRequired(true)
                    .build();

            TextInput suggestText = TextInput.create("suggestText", "[üí°] –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å?", TextInputStyle.PARAGRAPH)
                    .setPlaceholder("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
                    .setMinLength(1)
                    .setMaxLength(500)
                    .setRequired(true)
                    .build();

            // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            Modal suggestModal = Modal.create("suggestModal", "–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä MystiVerse")
                    .addComponents(ActionRow.of(suggestTitle), ActionRow.of(suggestText))
                    .build();

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            event.replyModal(suggestModal).queue();

            // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ª–æ–≥ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            LOGGER.info("Suggest");
        }
    }

    private static TextChannel suggestChannel;
    @Override
    public void onModalInteraction(ModalInteractionEvent event) {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª–æ –ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º "suggestModal"
            if (event.getModalId().equals("suggestModal")) {
                // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                String suggestAuthorId = event.getUser().getId();
                String suggestAuthorName = event.getUser().getName();

                // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                String suggestText = event.getValue("suggestText").getAsString();
                String suggestTitle = event.getValue("suggestTitle").getAsString();

                // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                suggestChannel = Discord.getJda().getTextChannelById("1190289941817733140");

                if (suggestChannel != null) {
                    // –í—ã–≤–æ–¥ –≤ –ª–æ–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                    LOGGER.info("Suggest added " + suggestAuthorId);

                    // –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º
                    EmbedBuilder suggestEmbed = new EmbedBuilder();
                    suggestEmbed.setTitle("[üí°] –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç " + suggestAuthorName);
                    suggestEmbed.setDescription("\n**" + suggestTitle + "**\n```" + suggestText + "```");
                    suggestEmbed.setColor(new Color(0x0097F5));
                    suggestEmbed.setFooter("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: " + format.format(date) + "  \nAuthorID: " + suggestAuthorId);
                    event.reply("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! üéÑ").setEphemeral(true).queue();

                    try {
                        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º —Ä–æ–ª–∏, –∞–≤—Ç–æ—Ä–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Å–∞–º–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                        suggestChannel.sendMessage("")
                                .setStickers() // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
                                .setEmbeds(suggestEmbed.build())
                                .queue(sentMessage -> {
                                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
                                    sentMessage.createThreadChannel("–æ–±—Å—É–∂–¥–µ–Ω–∏–µ " + suggestTitle).queue();
                                    sentMessage.addReaction(Emoji.fromUnicode("üëç")).queue();
                                    sentMessage.addReaction(Emoji.fromUnicode("üëé")).queue();
                                }, throwable -> {
                                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
                                    throwable.printStackTrace();
                                });
                    } catch (Exception e) {
                        LOGGER.warn("Send suggest error" + e);
                    }
                } else {
                    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                    event.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! ‚õî").setEphemeral(true).queue();
                }
            }
        } catch (Exception e) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤—ã–≤–æ–¥ –≤ –ª–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            LOGGER.warn("Suggest exception " + e);
        }
    }
}
